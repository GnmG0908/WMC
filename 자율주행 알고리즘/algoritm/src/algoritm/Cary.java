package algoritm;

public class Cary {
	

	public static void main(String[] args) {
		Cary_algorithm ca=new Cary_algorithm(-7, -5, -7);
		String state=null;//cary 가 움직이는 상태
		
		//----------------------------------------------------------------------
		System.out.println("============정상 작동 중입니다.============");
		//데이터 값 왼쪽, 앞 , 오른쪽(-7, -5, -7) 이라 가정=>앞으로간다.
		//1. 정상적으로 비콘값이 튀지 않을 경우임
		ca.beacon(-7, -5, -7);
		ca.beacon(-7.01, -4.81, -7.23);
		ca.beacon(-7.12, -4.96, -6.98);
		ca.beacon(-7.21, -5.15, -7.11);
		ca.beacon(-6.95, -5.26, -6.80);
		
		//----------------------------------------------------------------------
		System.out.println("============값 1개가 튀었을 경우=>비콘값 비정상 입니다.============");
		//2. 비콘 값 1개만 튈경우=> 비콘이 정상 작동 하지 않음
		//2.1. 왼쪽 비콘 값만 튈경우 
		ca.beacon(-8.12, -4.96, -6.98);//왼쪽값 튀었음

		//2.2. 앞쪽 비콘 값만 튈경우
		ca.beacon(-6.95, -6.26, -6.80);//앞쪽값 튀었음
		
		//2.3. 앞쪽 비콘 값만 튈경우
		ca.beacon(-7.21, -5.15, -5.11);//오른쪽값 튀었음
		//----------------------------------------------------------------------
		System.out.println("============값 2개가 튀었을 경우=>비콘값 비정상 입니다.============");
		//3. 비콘 값 2개만 튈경우 => 비콘이 정상 작동 하지 않음
		//3.1. 왼쪽값, 앞쪽값  비콘 값만 튈경우 
		ca.beacon(-8.12, -8.96, -6.98);//왼쪽값, 앞쪽값 튀었음

		//3.2. 앞쪽값, 오른쪽 비콘 값만 튈경우
		ca.beacon(-6.95, -6.26, -5.80);//앞쪽값, 오른쪽 튀었음
		
		//3.3. 왼쪽값, 오른쪽값 비콘 값만 튈경우
		ca.beacon(-9.21, -5.15, -5.11);//왼쪽값, 오른쪽값 튀었음
		//----------------------------------------------------------------------
		System.out.println("값 3개가 튀었을 경우=>비콘값 비정상 입니다.");
		//3. 비콘 값 3개만 튈경우 => 비콘이 정상 작동 하지 않음
		ca.beacon(-8.12, -8.96, -8.98);//모든값 튀었음
		
		ca.beacon(-7.21, -5.15, -7.11);//정상작동
		//----------------------------------------------------------------------
		System.out.println("값 3개가 튀었을 경우=>4번 연속튀었음=>방향전환");
		//4. 방향전환(-8,-9,-10)=>왼쪽으로 방향 전환
		ca.beacon(-8, -9, -10);
		ca.beacon(-8, -9, -10);
		ca.beacon(-8, -9, -10);
		ca.beacon(-8, -9, -10);
		ca.beacon(-8, -9, -10);//4번째에서 최종 방향 전환댐
		ca.beacon(-8, -9, -10);
		ca.beacon(-8, -9, -10);
		ca.beacon(-8, -9, -10);
		ca.beacon(-8, -9, -10);
	}
	
	
}
